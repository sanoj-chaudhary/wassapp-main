{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs3/helpers/toConsumableArray\";\nimport _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";\nimport _concatInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/concat\";\nimport { useEffect } from 'react';\nimport useInternalContext from './internal/useInternalContext';\nexport default function useObserveScrollPosition(observer) {\n  var _context;\n\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (observer && typeof observer !== 'function') {\n    console.error('react-scroll-to-bottom: First argument passed to \"useObserveScrollPosition\" must be a function.');\n  } else if (!_Array$isArray(deps)) {\n    console.error('react-scroll-to-bottom: Second argument passed to \"useObserveScrollPosition\" must be an array if specified.');\n  }\n\n  var _useInternalContext = useInternalContext(),\n      observeScrollPosition = _useInternalContext.observeScrollPosition;\n  /* eslint-disable-next-line react-hooks/exhaustive-deps */\n\n\n  useEffect(function () {\n    return observer && observeScrollPosition(observer);\n  }, _concatInstanceProperty(_context = []).call(_context, _toConsumableArray(deps), [!observer, observeScrollPosition]));\n}","map":null,"metadata":{},"sourceType":"module"}